{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,GAYiBC,EAZC,EAYSC,EAZN,KAalB,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,KApBVQ,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MAEjBS,EAAAb,GAASc,OAAOC,QAAQ,uBAAqBZ,QAAiBC,MAAU,IAEzEY,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAElBS,EAAAb,GAASc,OAAOG,QAAQ,sBAAoBd,QAAeC,MAAU,IAKzE,IAAuBD,EAAUC,EAFjCc,QAAQC,IAAIjB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\n\nconst p = createPromise(2, 1500)\n  .then(({ position, delay }) => {\n    //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\nconsole.log(p);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$p","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure","console","log"],"version":3,"file":"03-promises.a2ac29b9.js.map"}