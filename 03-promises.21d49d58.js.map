{"mappings":"gfAAAA,EAAA,SAEA,IAAMC,EAAM,CACVC,WAAYC,SAASC,cAAc,gBACnCC,UAAWF,SAASC,cAAc,eAClCE,YAAaH,SAASC,cAAc,iBACpCG,WAAYJ,SAASC,cAAc,UAOrCH,EAAIM,WAAWC,iBAAiB,UAahC,SAAsBC,GAEnBA,EAAIC,iBACJC,QAAQC,IAAIX,EAAIC,WAAWW,OAC3BF,QAAQC,IAAIX,EAAII,UAAUQ,OAC1BF,QAAQC,IAAIX,EAAIK,YAAYO,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst ref = {\n  inputDelay: document.querySelector('[name=delay]'),\n  inputStep: document.querySelector('[name=step]'),\n  inputAmount: document.querySelector('[name=amount]'),\n  formSubmit: document.querySelector('.form'),\n};\n\n// console.log(ref.inputStep);\n// console.log(ref.inputAmount);\n// console.log(ref.formSubmit);\n\nref.formSubmit.addEventListener('submit', onFormSubmit);\n\n\n// const p = createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\nfunction onFormSubmit(evt) {\n   \n   evt.preventDefault();\n   console.log(ref.inputDelay.value);\n   console.log(ref.inputStep.value);\n   console.log(ref.inputAmount.value);\n\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$ref","inputDelay","document","querySelector","inputStep","inputAmount","formSubmit","addEventListener","evt","preventDefault","console","log","value"],"version":3,"file":"03-promises.21d49d58.js.map"}