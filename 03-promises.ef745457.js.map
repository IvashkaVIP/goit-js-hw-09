{"mappings":"iiBAAA,IAgBuBA,EAAUC,EAhBjCC,EAAAC,EAAA,SAIMC,GAYiBJ,EAZC,EAYSC,EAZN,KAalB,IAAII,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KApBJW,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAEjBa,EAAAZ,GAASa,OAAOC,QAAQ,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,IAEvEiB,OAAM,SAAAL,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAElBa,EAAAZ,GAASa,OAAOI,QAAQ,sBAAqCF,OAAfjB,EAAS,QAAYiB,OAANhB,EAAM,M,IAGvEmB,QAAQC,IAAIjB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\n\nconst p = createPromise(2, 1500)\n  .then(({ position, delay }) => {\n    //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\nconsole.log(p);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["position","delay","$6JpON","parcelRequire","$ce04d3a99e08e73b$var$p","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","console","log"],"version":3,"file":"03-promises.ef745457.js.map"}